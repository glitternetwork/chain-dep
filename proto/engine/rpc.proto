syntax = "proto3";
package engine;
option go_package = "github.com/glitternetwork/chain-dep/glitter_proto/engine";

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "common/sql_engine.proto";

service Rpc {
  rpc Sync(SQLSyncRequest) returns (SQLSyncResponse);

  rpc SQLQuery(SQLQueryRequest) returns (SQLQueryResponse) {
    option (google.api.http) = {
      post: "/blockved/engine/index/sql/query",
      body: "*"
    };
  }

  rpc SimpleSQLQuery(SQLQueryRequest) returns (SimpleSQLQueryResponse) {
    option (google.api.http) = {
      post: "/blockved/engine/index/sql/simple_query",
      body: "*"
    };
  }

}


message SQLSyncRequest{
  string sql = 1;
  string uid = 2;
  string onTable = 3;
  string toUID = 4;
  string role = 5;
  string onDatabase = 6;
  string txIndex = 7;
  string txID = 8;
  string txType = 9; //x.index.SQLExecRequest or  x.index.SQLGrantRequest
  repeated common.Argument arguments = 10;
}

message SQLSyncResponse{
  uint32 code = 1;
  string msg = 2;
}



message SQLQueryRequest{
  string sql = 1;
  repeated common.Argument arguments = 2;
}

message SQLQueryResponse{
  repeated common.ResultSet results = 1;
  float took_times = 2;
}
message SimpleSQLQueryResponse{
  message ResultSet{
    map<string, RowValue> row = 1;
  }
  message RowValue{
    string value = 1;
    common.ColumnValueType column_value_type = 2;
  }
  repeated ResultSet result = 1;
}
