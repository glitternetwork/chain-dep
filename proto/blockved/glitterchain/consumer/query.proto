syntax = "proto3";
package blockved.glitterchain.consumer;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "blockved/glitterchain/consumer/consumer.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/glitternetwork/chain-dep/glitter_proto/blockved/glitterchain/consumer/types";

// Query defines the gRPC querier service.
service Query {


  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/blockved/glitterchain/consumer/params";
  }

  //query stake dataset by dapp
  rpc QueryConsumer(QueryConsumerRequest) returns (QueryConsumerResponse) {
    option (google.api.http) = {
      post: "/blockved/glitterchain/consumer/{address}",
      body: "*"
    };
  }
}

message QueryParamsRequest {

}

message QueryParamsResponse{}

message QueryConsumerRequest{
  string address = 1;
}

message QueryConsumerResponse{
  consumer consumer = 1;
}
